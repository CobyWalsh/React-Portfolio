{"ast":null,"code":"var _jsxFileName = \"/Users/cobywalsh/Desktop/My Projects/React-Portfolio/src/components/pages/navTabs.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  navTabsrStyle: {\n    background: '#82B7D7'\n  }\n};\n\n// Here I am using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({\n  currentPage\n}) {\n  _s();\n  const navigate = useNavigate();\n  const handlePageChange = page => {\n    navigate(`/${page}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"nav nav-tabs\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#aboutMe\",\n        onClick: () => handlePageChange('aboutMe')\n        // This is a conditional (ternary) operator that checks to see if the current page is \"aboutMe\"\n        // If it is, I set the current page to 'nav-link-active', otherwise I set it to 'nav-link'\n        ,\n        className: currentPage === 'aboutMe' ? 'nav-link active' : 'nav-link',\n        children: \"About Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#portfolio\",\n        onClick: () => handlePageChange('portfolio')\n        // Check to see if the currentPage is `portfolio`, and if so I used the active link class from bootstrap. Otherwise, I set it to a normal nav-link\n        ,\n        className: currentPage === 'portfolio' ? 'nav-link active' : 'nav-link',\n        children: \"Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#contact\",\n        onClick: () => handlePageChange('contact')\n        // Check to see if the currentPage is `contact`, and if so I used the active link class from bootstrap. Otherwise, I set it to a normal nav-link\n        ,\n        className: currentPage === 'contact' ? 'nav-link active' : 'nav-link',\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"nav-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#resume\",\n        onClick: () => handlePageChange('resume')\n        // Check to see if the currentPage is `resume`, and if so I used the active link class from bootstrap. Otherwise, I set it to a normal nav-link\n        ,\n        className: currentPage === 'resume' ? 'nav-link active' : 'nav-link',\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(NavTabs, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = NavTabs;\nexport default NavTabs;\nvar _c;\n$RefreshReg$(_c, \"NavTabs\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","styles","navTabsrStyle","background","NavTabs","currentPage","_s","navigate","handlePageChange","page","className","children","href","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cobywalsh/Desktop/My Projects/React-Portfolio/src/components/pages/navTabs.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst styles = {\n  navTabsrStyle: {\n    background: '#82B7D7',\n  },\n}\n\n// Here I am using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage }) {\n    const navigate = useNavigate();\n  \n    const handlePageChange = (page) => {\n        navigate(`/${page}`);\n    };\n  return (\n    <ul className=\"nav nav-tabs\">\n      <li className=\"nav-item\">\n        <a\n          href=\"#aboutMe\"\n          onClick={() => handlePageChange('aboutMe')}\n          // This is a conditional (ternary) operator that checks to see if the current page is \"aboutMe\"\n          // If it is, I set the current page to 'nav-link-active', otherwise I set it to 'nav-link'\n          className={currentPage === 'aboutMe' ? 'nav-link active' : 'nav-link'}\n        >\n          About Me\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#portfolio\"\n          onClick={() => handlePageChange('portfolio')}\n          // Check to see if the currentPage is `portfolio`, and if so I used the active link class from bootstrap. Otherwise, I set it to a normal nav-link\n          className={currentPage === 'portfolio' ? 'nav-link active' : 'nav-link'}\n        >\n          Portfolio\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#contact\"\n          onClick={() => handlePageChange('contact')}\n          // Check to see if the currentPage is `contact`, and if so I used the active link class from bootstrap. Otherwise, I set it to a normal nav-link\n          className={currentPage === 'contact' ? 'nav-link active' : 'nav-link'}\n        >\n          Contact\n        </a>\n      </li>\n      <li className=\"nav-item\">\n        <a\n          href=\"#resume\"\n          onClick={() => handlePageChange('resume')}\n          // Check to see if the currentPage is `resume`, and if so I used the active link class from bootstrap. Otherwise, I set it to a normal nav-link\n          className={currentPage === 'resume' ? 'nav-link active' : 'nav-link'}\n        >\n          Resume\n        </a>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAG;EACbC,aAAa,EAAE;IACbC,UAAU,EAAE;EACd;AACF,CAAC;;AAED;AACA;AACA,SAASC,OAAOA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,gBAAgB,GAAIC,IAAI,IAAK;IAC/BF,QAAQ,CAAE,IAAGE,IAAK,EAAC,CAAC;EACxB,CAAC;EACH,oBACET,OAAA;IAAIU,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC1BX,OAAA;MAAIU,SAAS,EAAC,UAAU;MAAAC,QAAA,eACtBX,OAAA;QACEY,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEA,CAAA,KAAML,gBAAgB,CAAC,SAAS;QACzC;QACA;QAAA;QACAE,SAAS,EAAEL,WAAW,KAAK,SAAS,GAAG,iBAAiB,GAAG,UAAW;QAAAM,QAAA,EACvE;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLjB,OAAA;MAAIU,SAAS,EAAC,UAAU;MAAAC,QAAA,eACtBX,OAAA;QACEY,IAAI,EAAC,YAAY;QACjBC,OAAO,EAAEA,CAAA,KAAML,gBAAgB,CAAC,WAAW;QAC3C;QAAA;QACAE,SAAS,EAAEL,WAAW,KAAK,WAAW,GAAG,iBAAiB,GAAG,UAAW;QAAAM,QAAA,EACzE;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLjB,OAAA;MAAIU,SAAS,EAAC,UAAU;MAAAC,QAAA,eACtBX,OAAA;QACEY,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEA,CAAA,KAAML,gBAAgB,CAAC,SAAS;QACzC;QAAA;QACAE,SAAS,EAAEL,WAAW,KAAK,SAAS,GAAG,iBAAiB,GAAG,UAAW;QAAAM,QAAA,EACvE;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLjB,OAAA;MAAIU,SAAS,EAAC,UAAU;MAAAC,QAAA,eACtBX,OAAA;QACEY,IAAI,EAAC,SAAS;QACdC,OAAO,EAAEA,CAAA,KAAML,gBAAgB,CAAC,QAAQ;QACxC;QAAA;QACAE,SAAS,EAAEL,WAAW,KAAK,QAAQ,GAAG,iBAAiB,GAAG,UAAW;QAAAM,QAAA,EACtE;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET;AAACX,EAAA,CAnDQF,OAAO;EAAA,QACKN,WAAW;AAAA;AAAAoB,EAAA,GADvBd,OAAO;AAqDhB,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}